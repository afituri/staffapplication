// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StaffInformationApp.Data;

#nullable disable

namespace StaffInformationApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240705103521_ConfigureForeignKey1")]
    partial class ConfigureForeignKey1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StaffInformationApp.Models.DutyStation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("DutyStations");
                });

            modelBuilder.Entity("StaffInformationApp.Models.EducationLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("EducationLevels");
                });

            modelBuilder.Entity("StaffInformationApp.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("StaffInformationApp.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BriefDescriptionOfRole")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LevelOfResponsibility")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProjectTitleAndLocation")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("StaffInformationApp.Models.SoftwareExpertise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SoftwareName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("SoftwareExpertise");
                });

            modelBuilder.Entity("StaffInformationApp.Models.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AvailabilityForRemoteWork")
                        .HasColumnType("bit");

                    b.Property<string>("CurrentLocation")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("DutyStationId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullNames")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("HighestLevelOfEducationId")
                        .HasColumnType("int");

                    b.Property<string>("IndexNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DutyStationId");

                    b.HasIndex("HighestLevelOfEducationId");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("StaffInformationApp.Models.StaffLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("LevelOfResponsibility")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("StaffId");

                    b.ToTable("StaffLanguage");
                });

            modelBuilder.Entity("StaffInformationApp.Models.StaffSoftwareExpertise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ExpertiseLevel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SoftwareExpertiseId")
                        .HasColumnType("int");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SoftwareExpertiseId");

                    b.HasIndex("StaffId");

                    b.ToTable("StaffSoftwareExpertise");
                });

            modelBuilder.Entity("StaffInformationApp.Models.Project", b =>
                {
                    b.HasOne("StaffInformationApp.Models.Staff", "Staff")
                        .WithMany("Projects")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("StaffInformationApp.Models.Staff", b =>
                {
                    b.HasOne("StaffInformationApp.Models.DutyStation", "DutyStation")
                        .WithMany("StaffMembers")
                        .HasForeignKey("DutyStationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("StaffInformationApp.Models.EducationLevel", "HighestLevelOfEducation")
                        .WithMany("StaffMembers")
                        .HasForeignKey("HighestLevelOfEducationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("DutyStation");

                    b.Navigation("HighestLevelOfEducation");
                });

            modelBuilder.Entity("StaffInformationApp.Models.StaffLanguage", b =>
                {
                    b.HasOne("StaffInformationApp.Models.Language", "Language")
                        .WithMany("StaffLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("StaffInformationApp.Models.Staff", "Staff")
                        .WithMany("Languages")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("StaffInformationApp.Models.StaffSoftwareExpertise", b =>
                {
                    b.HasOne("StaffInformationApp.Models.SoftwareExpertise", "SoftwareExpertise")
                        .WithMany("StaffSoftwareExpertises")
                        .HasForeignKey("SoftwareExpertiseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("StaffInformationApp.Models.Staff", "Staff")
                        .WithMany("SoftwareExpertises")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("SoftwareExpertise");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("StaffInformationApp.Models.DutyStation", b =>
                {
                    b.Navigation("StaffMembers");
                });

            modelBuilder.Entity("StaffInformationApp.Models.EducationLevel", b =>
                {
                    b.Navigation("StaffMembers");
                });

            modelBuilder.Entity("StaffInformationApp.Models.Language", b =>
                {
                    b.Navigation("StaffLanguages");
                });

            modelBuilder.Entity("StaffInformationApp.Models.SoftwareExpertise", b =>
                {
                    b.Navigation("StaffSoftwareExpertises");
                });

            modelBuilder.Entity("StaffInformationApp.Models.Staff", b =>
                {
                    b.Navigation("Languages");

                    b.Navigation("Projects");

                    b.Navigation("SoftwareExpertises");
                });
#pragma warning restore 612, 618
        }
    }
}
